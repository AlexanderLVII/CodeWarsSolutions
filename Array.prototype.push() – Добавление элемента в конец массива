Array.prototype.push() – Добавление элемента в конец массива

1.	Push a hash/an object into array
https://www.codewars.com/kata/527b3cd0492b6b15250060af
You are trying to put a hash in ruby or an object in javascript or java into an array, but it always returns error, solve it and keep it as simple as possible!
items = []
items.push ({a: "b", c: "d"});

2.	Basic Sequence Practice
https://www.codewars.com/kata/5436f26c4e3d6c40e5000282
Complete the function that takes an integer n and returns a list/array of length abs(n) + 1 of the arithmetic series explained above. Whenn < 0 return the sequence with negative terms.
function sumOfN(n) {
  let arr = [0];
  for (let i = 1; i <= Math.abs(n); i++){ 
    arr.push( n >= 0 ? arr[i-1] + i : (arr[i-1] - i) );
  }
  return arr
};

3.	Count by X
https://www.codewars.com/kata/5513795bd3fafb56c200049e/train/javascript
Create a function with two arguments that will return an array of the first (n) multiples of (x).
function countBy(x, n) {
  var z = [];
  for (let i = 1; i <= n; i++){ 
    z.push(  i * x );
  }
  return z;
}

4.	Unfinished Loop - Bug Fixing #1
https://www.codewars.com/kata/55c28f7304e3eaebef0000da/train/javascript
function createArray(number){
  var newArray = [];
  
  for(var counter = 1; counter <= number;counter++){
    newArray.push(counter);
  }
  
  return newArray;
}

5.	Generate range of integers
https://www.codewars.com/kata/55eca815d0d20962e1000106/train/javascript
Implement a function named generateRange(min, max, step), which takes three arguments and generates a range of integers from min to max, with the step. The first integer is the minimum value, the second is the maximum of the range and the third is the step. (min < max)
function generateRange(min, max, step){
  let z = [min];
  for (let i = 1; i <= (max-min)/step; i++){ 
    z.push( z[i-1] + step );
  }
  return z;
}

function generateRange2(min, max, step){
  let arr = [];
  for (let i=min; i<=max; i += step) {
    arr.push(i);
  }
  return arr;
}

6.	Pre-FizzBuzz Workout #1
https://www.codewars.com/kata/569e09850a8e371ab200000b/train/javascript
Your inputs: a positive integer, n, greater than or equal to one. n is provided, you have NO CONTROL over its value.
Your expected output is an array of positive integers from 1 to n (inclusive).
function preFizz(n) {
  let z = [];
  for (let i = 1; i <= n; i++){ 
    z.push( i );
  }
  return z;
}

7.	Powers of 2
https://www.codewars.com/kata/57a083a57cb1f31db7000028/train/javascript
Complete the function that takes a non-negative integer n as input, and returns a list of all the powers of 2 with the exponent ranging from 0 to n (inclusive).
function powersOfTwo(n){
  let z = [];
  for (let i = 0; i <= n; i++){ 
    z.push( Math.pow(2, i));
  }
  return z;
}

8.	Show multiples of 2 numbers within a range
https://www.codewars.com/kata/583989556754d6f4c700018e
Print all numbers up to 3rd parameter which are multiple of both 1st and 2nd parameter.
function multiples(s1,s2,s3){
  let arr = [];
  for (let i=1; i < s3; i++) {
    if (i % s1 === 0 && i % s2 === 0)  arr.push(i);
  }
  return arr;
}


function multiples2(s1, s2, s3) {
  let res = [];
  for (let i = s1; i < s3; i += s1)
    if (i % s2 === 0)
      res.push(i)
  return res;
}

9.	All Star Code Challenge #10
https://www.codewars.com/kata/58646a1173bd9c86080000ef
Create a function named fibonacci() that takes a number argument, N, and gets the Nth number in a fibonacci sequence.
function  fibonacci(n){
  let res = [1,1];
  for (let i = 2; i < n; i++)
      res.push(res[i-1]+ res[i-2])
  return n !== 0 ? res[n-1] : 0
}

function  fibonacci2(n){
  if(n==0) return 0;
  if(n==1) return 1;
  return fibonacci2(n-2) + fibonacci2(n-1);
}


function  fibonacci(n){
  var [a, b] = [0, 1];
  while (n-->0) [a, b] = [b, a+b];
  return a;
}

10.	Holy cats
https://www.codewars.com/kata/58ebfa6ef7cda1a3d4000048
function holycats(input){
  let arr = [];
  for (let i=0; i < input.length; i++) {
    if (input[i].indexOf('^') !== -1)  arr.push(input[i]);
  }
  return arr;
}

11.	Find all non-consecutive numbers
https://www.codewars.com/kata/58f8b35fda19c0c79400020f
Your task is to find all the elements of an array that are non consecutive.
function allNonConsecutive (arr) {
  let res = [];
   for (let j = 0; j < arr.length-1 ; j++) {
    if (arr[j] + 1 !== arr[j + 1]) res.push({i:j+1, n:arr[j+1]});
  }
  return res;
}

