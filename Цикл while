Понятие цикла. Цикл while
1.	Power of two
https://www.codewars.com/kata/534d0a229345375d520006a0/train/javascript
Complete the function power_of_two/powerOfTwo (or equivalent, depending on your language) that determines if a given non-negative integer is a power of two. From the corresponding

function isPowerOfTwo(n){
  let k = n === 1 ? 0 : 1;
  let p = 2;
  while (p < n){
    k++;
    p = p * 2;
  }
  return p === n || n === 1;
}

  while ( n>= 2){
    
    n =  n / 2;
  }
  return n === 1

2.	Difference Of Squares
Find the difference between the sum of the squares of the first n natural numbers (1 <= n <= 100) and the square of their sum.

function differenceOfSquares(n){
  let s1 = 0;
  let s2 = 0;
  let i = 1;
  while (i <= n){
    s1 += i;
    s2 += i * i;
    i++;
  }
  return s1 * s1 - s2 
}

differenceOfSquares=x=>x*(x*x-1)*(3*x+2)/12

const differenceOfSquares = x => Math.pow(x * (x + 1) / 2, 2) - x * (x + 1) * (2 * x + 1) / 6;



3.	Going to the cinema
https://www.codewars.com/kata/562f91ff6a8b77dfe900006e/train/javascript
System A : he buys a ticket (15 dollars) every time
System B : he buys a card (500 dollars) and a first ticket for 0.90 times the ticket price, 
then for each additional ticket he pays 0.90 times the price paid for the previous ticket.

function movie(card, ticket, perc) {
  let priceA = 0;
  let priceB = card;
  let c = ticket;
  let n = 0;
  while (Math.ceil(priceB) >= priceA){
    priceA += ticket;
    c = c * perc;
    priceB += c;
    n++;
  }
  return n
}


const movie = (card, ticket, perc) => {
  let cnt = 0;
  while (ticket * cnt <= Math.ceil(card)) {
    cnt++;
    card += ticket * perc ** cnt;
  }
  return cnt;
}


4.	Money, Money, Money

https://www.codewars.com/kata/563f037412e5ada593000114/train/javascript
function calculateYears(p, i, t, d) {
  let y = 0;
  while (p < d){
    p = p*(1 + i*(1 - t))
    y++;
  }
  return y
}

5.	No zeros for heros
https://www.codewars.com/kata/570a6a46455d08ff8d001002/train/javascript
function noBoringZeros(n) {
    while( n % 10 === 0 && n !== 0){
     n = n  / 10;
  }
  return n;  }


function noBoringZeros(n) {
  while(n%10==0 && n!=0){n/=10;}
  return n;
}

const noBoringZeros = n => parseInt(n.toString().replace(/0+$/g, "") + 0) / 10;

6.	Factorial
https://www.codewars.com/kata/57a049e253ba33ac5e000212/train/javascript
function factorial(n){
  let s = 1;
  let i = 1;
  while (i <= n){
    s = s * i;
    i++;
  }
  return s 
}

const factorial=n=>n?n*factorial(n-1):1;


7.	Powers of 3
https://www.codewars.com/kata/57be674b93687de78c0001d9/train/javascript
Given a positive integer N, return the largest integer k such that 3^k < N.
function largestPower(n){
  let k = 0;
  while (n > 3 ** k){
      k++;
  }
  return k-1;

}




8.	"Very Even" Numbers.
https://www.codewars.com/kata/58c9322bedb4235468000019/train/javascript
Write a function that returns true if the number is a "Very Even" number.

If a number is a single digit, then it is simply "Very Even" if it itself is even.

If it has 2 or more digits, it is "Very Even" if the sum of it's digits is "Very Even".

function isVeryEvenNumber(n) {
  n = n + '';
  while(n.length >1){
    let s = 0;
    for (let i = 0; i < n.length; i++){
      s += +n[i];
    }
    n = s + '';
  }
  return +n % 2 === 0;
}


9.	Next Prime
https://www.codewars.com/kata/58e230e5e24dde0996000070/train/javascript
function isPrime(n){
  if (n <= 1) return false;
  for (let i =2; i < Math.round(Math.sqrt(n) + 1); i++ ){
    if(n % i === 0) return false;
   } return true;
}
function nextPrime(n){
  n = n + 1;
  while(!isPrime(n)){
    n++; 
  } return n;
}

10.	The wheat/rice and chessboard problem
https://www.codewars.com/kata/5b0d67c1cb35dfa10b0022c7/train/javascript
function squaresNeeded(n){
  i = 0;
  while (n >= 1){
    n = n / 2;
    i++
  } return i;
}


myjinxin2015
squaresNeeded=g=>g?g.toString(2).length:0
