Array.prototype.indexOf() – Нахождение первого индекса элемента в массиве

1.	A Needle in the Haystack
https://www.codewars.com/kata/56676e8fabd2d1ff3000000c/train/javascript
Write a function findNeedle() that takes an array full of junk but containing one "needle"
After your function finds the needle it should return a message (as a string) that says:
"found the needle at position " plus the index it found the needle, so:
function findNeedle(haystack) {
    return  "found the needle at position " + haystack.indexOf('needle')
}

2.	Be Concise IV - Index of an element in an array
https://www.codewars.com/kata/5703c093022cd1aae90012c9/train/javascript
function find(arr,el){
 return arr.indexOf(el) !==-1 ? arr.indexOf(el) :"Not found";}

const find = (a, x) => (x = a.indexOf(x)) < 0 ? 'Not found' : x

3.	The Office IV - Find a Meeting Room
https://www.codewars.com/kata/57f604a21bd4fe771b00009c
function meeting(x){
return x.indexOf('O') === -1 ?   'None available!' : x.indexOf('O')
}

4.	A wolf in sheep's clothing
https://www.codewars.com/kata/5c8bfa44b9d1192e1ebd3d15/train/javascript
function warnTheSheep(queue) {
  return queue.indexOf("wolf",-1) === queue.length-1 ?   "Pls go away and stop eating my sheep" :
    "Oi! Sheep number " + (queue.length - queue.indexOf("wolf")-1)  + "! You are about to be eaten by a wolf!"
}

5.	Consecutive items
https://www.codewars.com/kata/5f6d533e1475f30001e47514
You are given a list of unique integers arr, and two integers a and b. Your task is to find out whether or not a and b appear consecutively in arr, and return a boolean value (True if a and b are consecutive, False otherwise).
function consecutive(arr, a, b) {
  return Math.abs(arr.indexOf(a) - arr.indexOf(b)) === 1 
}



****************** ********************************************************
Array.prototype.filter() – Фильтрация массива по условию
1.	JavaScript Array Filter
https://www.codewars.com/kata/514a6336889283a3d2000001/train/javascript
JavaScript Arrays support a filter function (starting in JavaScript 1.6). Use the filter functionality to complete the function given. Вернуть четные числа
function getEvenNumbers(numbersArray){
  return numbersArray.filter(el => el % 2 === 0);
}
2.	Array.diff
https://www.codewars.com/kata/523f5d21c841566fde000009/train/javascript
Your goal in this kata is to implement a difference function, which subtracts one list from another and returns the result.
It should remove all values from list a, which are present in list b.
function arrayDiff(a, b) {
  if (b.length === 0 ) return a;
  let arr = a;
  for (let i = 0; i < b.length; i++){
    arr = arr.filter(el => el !== b[i]);
  }
  return arr
}

function array_diff(a, b) {
  return a.filter(e => !b.includes(e));
}

3.	List Filtering
https://www.codewars.com/kata/53dbd5315a3c69eed20002dd
In this kata you will create a function that takes a list of non-negative integers and strings and returns a new list with the strings filtered out.
function filter_list(l) {
  return l.filter(el => typeof(el) === "number");
}

4.	Enumerable Magic #5- True for Just One?
https://www.codewars.com/kata/54599705cbae2aa60b0011a4
reate a function called one that accepts two params:
a sequence
a function
and returns true only if the function in the params returns true for exactly one (1) item in the sequence.
function one(arr, fun){
   return arr.filter(fun).length === 1;
}

5.	Friend or Foe?
https://www.codewars.com/kata/55b42574ff091733d900002f
Make a program that filters a list of strings and returns a list with only your friends name in it.
If a name has exactly 4 letters in it, you can be sure that it has to be a friend of yours! Otherwise, you can be sure he's not...
function friend(friends){
  return friends.filter(el => el.length === 4);
}


6.	Find numbers which are divisible by given number
https://www.codewars.com/kata/55edaba99da3a9c84000003b/train/javascript
Complete the function which takes two arguments and returns all numbers which are divisible by the given divisor. First argument is an array of numbers and the second is the divisor.
function divisibleBy(numbers, divisor){
  return numbers.filter(el => el % divisor === 0);
}

7.	Removing Elements
https://www.codewars.com/kata/5769b3802ae6f8e4890009d2/train/javascript
Take an array and remove every second element from the array. Always keep the first element and start removing with the next element.
function removeEveryOther(arr){
 return arr.filter((el,i) => i % 2 === 0);
}

8.	Filter out the geese
https://www.codewars.com/kata/57ee4a67108d3fd9eb0000e7
Write a function, gooseFilter / goose-filter / goose_filter /GooseFilter, that takes an array of strings as an argument and returns a filtered array containing the same elements but with the 'geese' removed.
function gooseFilter (birds) {
  var geese = ["African", "Roman Tufted", "Toulouse", "Pilgrim", "Steinbacher"];
  return birds.filter(e => !geese.includes(e));
}

9.	Well of Ideas - Easy Version
https://www.codewars.com/kata/57f222ce69e09c3630000212/train/javascript
In this kata you need to check the provided array (x) for good ideas 'good' and bad ideas 'bad'. If there are one or two good ideas, return 'Publish!', if there are more than 2 return 'I smell a series!'. If there are no good ideas, as is often the case, return 'Fail!'.
function well(x){
 const ret = x.filter(el => el ==='good');
 return ret.l function sumOfDifferences(arr) {
    return arr.length > 1 ? Math.max(...arr) - Math.min(...arr) : 0;
}
ength === 0 ? 'Fail!': ret.length > 2 ?  'I smell a series!' : 'Publish!' 
}

10.	Find the lucky numbers
https://www.codewars.com/kata/580435ab150cca22650001fb
Write a function filterLucky/filter_lucky() that accepts a list of integers and filters the list to only include the elements that contain the digit 7.
var filterLucky=x=>{
  return x.filter(el => (el+'').includes('7'));
}

const filterLucky = list => list.filter(n => /7/.test(n))

11.	Merge two arrays
https://www.codewars.com/kata/583af10620dda4da270000c5
Write a function that combines two arrays by alternatingly taking elements from each array in turn.
[a, b, c, d, e], [1, 2, 3, 4, 5] becomes  [a, 1, b, 2, c, 3, d, 4, e, 5]
function mergeArrays(a, b) {
  let c = [];
  let k = a.length > b.length ? b.length : a.length;
  if (a.length > b.length){
    for (let i = 0; i < a.length;i++){
      c.push(a[i]);
      if (i < k)  c.push(b[i]);
    }
  }
   else {
    for (let i = 0; i < b.length;i++){
      if (i < k) c.push(a[i]);
      c.push(b[i]);
    } 
   } 
 return c
}

12.	Filter out the vowels
https://www.codewars.com/kata/5944367162ed20be2a00005d
that takes an array of strings as an argument and returns a filtered array containing the same elements but with the 'vowels' removed.

The vowels are any strings in the following array, which is pre-populated in your solution:

vowels = ["a", "e", "i", "o", "u"]
function vowelFilter (letters) {
  var vowels = ["a", "e", "i", "o", "u"];
    return letters.filter(el => !vowels.includes(el));
};

13.	filterEvenLengthWords
https://www.codewars.com/kata/59564f3bcc15b5591a00004a/train/javascript
Given an array of strings, "filterEvenLengthWords" returns an array containing only the elements of the given array whose length is an even number.
function filterEvenLengthWords(words) {
      return words.filter(el => el.length % 2 === 0);
}

****************** ********************************************************
Array.prototype.find() – Найти элемент в массиве
1. Array element parity
 https://www.codewars.com/kata/5a092d9e46d843b9db000064
you will be given an array of integers whose elements have both a negative and a positive value, except for one integer that is either only negative or only positive. Your task will be to find that integer.
function solve(arr){
   return arr.find(el => !arr.includes(-el))
};

****************** ********************************************************
Нахождение дубликатов в массиве
1. Find Duplicates 
	https://www.codewars.com/kata/5558cc216a7a231ac9000022/train/javascript
Given an array, find the duplicates in that array, and return a new array of those duplicates. The elements of the returned array should appear in the order when they first appeared as duplicates.

	function duplicates(arr) {
    let mas = arr.filter((el, i) => i !== arr.indexOf(el) && i === arr.indexOf(el, i));
    
   return mas.filter((el, i) => i === mas.indexOf(el))
}

		const duplicates2 = arr => [...new Set(arr.filter((el, i) => i !== arr.lastIndexOf(el)))];
****************** ********************************************************
Удаление дубликатов в массиве. Оставить только уникальные элементы в массиве

1.	Two to One
https://www.codewars.com/kata/5656b6906de340bd1b0000ac
Take 2 strings s1 and s2 including only letters from a to z. Return a new sorted string, the longest possible, containing distinct letters, each taken only once - coming from s1 or s2.
function longest(s1, s2) {
  let arr = (s1 + s2).split('');
  let nonDuplicates = arr.filter((el, i) => i === arr.indexOf(el));  
  return nonDuplicates.sort().join('')
}

const longest = (s1, s2) => [...new Set(s1+s2)].sort().join('')

2.	Complete Series
https://www.codewars.com/kata/580a4001d6df740d61000301
You are given an array of non-negative integers, your task is to complete the series from 0 to the highest number in the array.
If the numbers in the sequence provided are not in order you should order them, but if a value repeats, then you must return a sequence with only one item, and the value of that item must be 0. like this:
function completeSeries(arr) {
  if (arr.find(el => arr.indexOf(el) !== arr.lastIndexOf(el)) !== undefined) return [0] ;
  let max = Math.max(...arr);
  arr = [];
  for (let i = 0; i <= max;i++){
    arr.push(i);
  }
  return arr
  
}

function completeSeries2(arr) {
    return new Set(arr).size === arr.length ? [...Array(Math.max(...arr)+1).keys()] : [0];
}

3.	Train to remove duplicates from an array with filter()
https://www.codewars.com/kata/58308360aeb69a460b0002b2/train/javascript
task is to remove all the duplicates from the array using a standart build-in method - Array.prototype.filter(); return the array containing unique values only.
function unique(arr) {
    return arr.filter((el, i) => i === arr.indexOf(el));

}

4.	All Star Code Challenge #16
https://www.codewars.com/kata/586566b773bd9cbe2b000013
Create a function called noRepeat() that takes a string argument and returns a single letter string of the first not repeated character in the entire string
function noRepeat(str) {  
  let arr = str.split('');
  let nonDuplicates = arr.filter(el => arr.indexOf(el) === arr.lastIndexOf(el));  
  return nonDuplicates[0];
}

function noRepeat2(str) {  
  for(var i of str) if(str.split(i).length == 2) return i
}


****************** ********************************************************
Array.prototype.reverse() – Перевернуть массив
1.	Convert number to reversed array of digits
https://www.codewars.com/kata/5583090cbe83f4fd8c000051/train/javascript
Given a random non-negative number, you have to return the digits of this number within an array in reverse order.
function digitize(n) {
  return  (n+'').split('').reverse().map(item => +item);
}

2.	My head is at the wrong end!
https://www.codewars.com/kata/56f699cd9400f5b7d8000b55/train/javascript

function fixTheMeerkat(arr) {
   return  arr.reverse();
}

****************** ********************************************************
Array.prototype.concat() – Объединение массивов
1.	Add new item (collections are passed by reference)
https://www.codewars.com/kata/566dc05f855b36a031000048
function addExtra( listOfNumbers ){
 return  listOfNumbers.concat(11)
}

2.	Training JS #29: methods of arrayObject---concat() and join()
https://www.codewars.com/kata/5731861d05d14d6f50000626
function bigToSmall(arr){
return [].concat(...arr).sort( (a, b) => b - a ).join(">");
}

****************** ********************************************************
Array.prototype.indexOf(),.filter() , .find(), .reverse(),.concat(),.sort(), Нахождение дубликатов в массиве, 

Array.prototype.sort() – Сортировка массива на месте
1.	Two Oldest Ages
https://www.codewars.com/kata/511f11d355fe575d2c000001/train/javascript

function twoOldestAges(ages){
  return [ages.sort((a,b)=> b-a)[1], ages.sort((a,b)=> b-a)[0]]
}

2.	Sort Numbers
https://www.codewars.com/kata/5174a4c0f2769dd8b1000003
Finish the solution so that it sorts the passed in array of numbers. If the function passes in an empty array or null/nil value then it should return an empty array.
function solution(nums){
  return  (nums == null || nums.length === 0) ? [] :  nums.sort((a,b) => a - b )
}

3.	Largest pair sum in array
https://www.codewars.com/kata/556196a6091a7e7f58000018
Given a sequence of numbers, find the largest pair sum in the sequence.
function largestPairSum(numbers){
  return numbers.sort((a,b) => b - a )[0] + numbers.sort((a,b) => b - a )[1]
}

4.	Sum of two lowest positive integers
https://www.codewars.com/kata/558fc85d8fd1938afb000014/train/javascript
Create a function that returns the sum of the two lowest positive numbers given an array of minimum 4 positive integers. No floats or non-positive integers will be passed.
function sumTwoSmallestNumbers(numbers) {  
    return numbers.sort((a,b) => a - b )[0] + numbers.sort((a,b) => a - b )[1]
}

5.	Sort array by string length
https://www.codewars.com/kata/57ea5b0b75ae11d1e800006c
Write a function that takes an array of strings as an argument and returns a sorted array containing the same strings, ordered from shortest to longest.
function sortByLength (array) {
  return array.sort((a,b)=> a.length - b.length )
};

6.	Santa's Naughty List
https://www.codewars.com/kata/5a0b4dc2ffe75f72f70000ef/train/javascript
Christmas is coming, and Santa has a long list to go through, to find who deserves presents for the big day. Go through a list of children, and return a list containing every child who appeared on Santa's list. Do not add any child more than once. Output should be sorted.

Comparison should be case sensitive and the returned list should contain only one copy of each name: "Sam" and "sam" are different, but "sAm" and "sAm" are not.

function findChildren(santasList, children) {
  let arr = children.filter(el => santasList.includes(el));
  return arr.filter((el, i) => i === arr.indexOf(el)).sort();
}

7.	Minimize Sum Of Array (Array Series #1) 
https://www.codewars.com/kata/5a523566b3bfa84c2e00010b
Given an array of integers , Find the minimum sum which is obtained from summing each Two integers product .
function minSum(arr) {
  arr = arr.sort((a,b)=> a-b);
  let sum = 0;
  for (let i = 0; i < arr.length/2;i++){
      sum += arr[i] * arr[arr.length - i -1];
   }
  return sum;
}

function minSum(arr) {
  return arr.sort( (a,b) => a-b )
            .slice(0, arr.length/2)
            .reduce( (acc,curr,index) => acc += curr * arr[ arr.length - index - 1 ], 0 )

8.	Minimum Steps (Array Series #6)
https://www.codewars.com/kata/5a91a7c5fd8c061367000002
Given an array of N integers, you have to find how many times you have to add up the smallest numbers in the array until their Sum becomes greater or equal to K.
function minimumSteps(numbers, value){
  numbers = numbers.sort((a,b)=>a-b);
  let sum = 0;
  let i = 0;
  for( i ;sum < value;i++){
    sum += numbers[i];
  }
  return i-1
}

function minimumSteps2(numbers, value){
   return numbers.sort((a,b)=>a-b).filter((e,i)=> (value=value-e) > 0).length;
}

9.	Sum of differences in array
https://www.codewars.com/kata/5b73fe9fb3d9776fbf00009e/train/javascript
Your task is to sum the differences between consecutive pairs in the array in descending order.
function sumOfDifferences(arr) {
arr = arr.sort((a,b)=>b-a);
  return arr.reduce((sum, el,i) => sum + (i < arr.length-1 ?  el-arr[i+1] : 0 ) ,0);
}

function sumOfDifferences(arr) {
    return arr.length > 1 ? Math.max(...arr) - Math.min(...arr) : 0;
}

10.	Mirror, mirror, on the wall...
https://www.codewars.com/kata/5f55ecd770692e001484af7d
You get a list of integers, and you have to write a function mirror that returns the "mirror" (or symmetric) version of this list: i.e. the middle element is the greatest, then the next greatest on both sides, the the next greatest, and so on...
function mirror(data) {
    let arr = [];
    arr =  data.slice();
    arr.sort((a,b)=>a-b);
    let dss = [];
     dss =   arr.slice();
     dss.reverse(); 
    dss = dss.slice(1);
    return arr.concat(dss);
}

function mirror(data) {
  const sort = data.slice().sort((a, b) => a - b);
  return [...sort, ...sort.reverse().slice(1)];
}

function mirror(data) {
  var result = [].concat(data).sort((a, b) => a - b);
  result.pop();
  return result.concat([].concat(data).sort((a, b) => b - a));
}


****************** ********************************************************
Array.prototype.join() – Массив в строку
1.	Sentence Smash
https://www.codewars.com/kata/53dc23c68a0c93699800041d/train/javascript
Write a function that takes an array of words and smashes them together into a sentence and returns the sentence. You can ignore any need to sanitize words or add punctuation, but you should add spaces between each word. Be careful, there shouldn't be a space at the beginning or the end of the sentence
function smash (words) {
    return words.join(' ')
};

2.	String Templates - Bug Fixing #5
https://www.codewars.com/kata/55c90cad4b0fe31a7200001f/train/javascript
function buildString(...template){
  return `I like ${template.join(', ')}!`;
}

3.	Printing Array elements with Comma delimiters
https://www.codewars.com/kata/56e2f59fb2ed128081001328/train/javascript
function printArray(array){
  return array.join()
}

4.	Ones and Zeros
https://www.codewars.com/kata/578553c3a1b8d5c40300037c
const binaryArrayToNumber = arr => {
  return  parseInt(arr.join(''),2)
};

5.	CSV representation of array
https://www.codewars.com/kata/5a34af40e1ce0eb1f5000036/train/javascript
function toCsvText(array) {
  let str = '';
   for (let i = 0; i < array.length; i++){
     str += array[i].join() +'\n';
   }
  return str.slice(0,str.length-1)
}

function toCsvText(array) {
   return array.join('\n');
}
